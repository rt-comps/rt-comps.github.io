const[compName]=rtlib.parseURL(import.meta.url);customElements.define(compName,class extends rtBC.RTBaseClass{static formAssociated=true;#_internals=null;#_input;constructor(){super();const _sR=this.attachShadow({mode:"open",delegateFocus:true});_sR.append(this.$getTemplate());this.#_internals=this.attachInternals();this.#_input=_sR.querySelector("input");if(this.hasAttribute("required")){this.#_input.setAttribute("required","");_sR.querySelector("span").innerHTML="&nbsp*"}if(this.hasAttribute("type")){const inputType=this.getAttribute("type");switch(inputType){case"tel":this.#_input.pattern="0[0-9]{9}";case"email":this.#_input.type=inputType;break;case"post":this.#_input.pattern="[0-9]{4} {0,1}[A-Za-z]{2}";break}}_sR.querySelector("label").insertAdjacentHTML("afterbegin",`${this.getAttribute("label")||"Name Missing"}&nbsp;`);this.addEventListener("focus",()=>this.focus())}formAssociatedCallback(){if(this.#_internals.form){this.#_internals.form.addEventListener("formdata",e=>e.formData.set(this.name,this.value))}}formResetCallback(){this.#_input.value=null}get value(){return this.#_input.value}set value(v){this.#_input.value=v}get name(){return this.getAttribute("name")}checkValidity(){return this.#_input.checkValidity()}focus(){this.#_input.focus()}});

const[compName]=rtlib.parseURL(import.meta.url);customElements.define(compName,class extends rtBC.RTBaseClass{constructor(){super().attachShadow({mode:"open"}).append(this.$getTemplate());this.shadowRoot.querySelector("#delete").addEventListener("click",()=>{this.$dispatch({name:"cartmod",detail:{prodID:this.getAttribute("prodid"),action:"remove"}});this.remove()});this.addEventListener("updatecount",e=>this.render(e))}connectedCallback(){this.render()}render(e){const _sR=this.shadowRoot;const unit=parseInt(this.$attr("unit"));let count=parseInt(_sR.querySelector("#count").innerHTML);if(e){e.stopPropagation();count+=e.detail.change;switch(true){case count>10:count=10;break;case count<0:count=0}this.$dispatch({name:"cartmod",detail:{prodID:this.getAttribute("prodid"),count:e.detail.change,action:"update"}})}else{count=parseInt(this.$attr("count"));_sR.querySelector("#unit").innerHTML=`${this.$euro(unit/100)}`}_sR.querySelector("#count").innerHTML=`${count}`;if(count>0)this.setAttribute("count",count);else this.removeAttribute("count");_sR.querySelector("#total").innerHTML=`${this.$euro(count*unit/100)}`}});
